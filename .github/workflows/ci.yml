name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Lint with ruff
      run: |
        poetry run ruff check .
    - name: Type-check with mypy
      run: |
        poetry run mypy .
    - name: Test with pytest
      run: |
        poetry run pytest --maxfail=1 --disable-warnings -q --cov=autorag_live --cov-report=xml
    - name: Enforce coverage >= 80%
      run: |
        python - <<'PY'
        import xml.etree.ElementTree as ET
        tree = ET.parse('coverage.xml')
        cov = float(tree.getroot().attrib['line-rate']) * 100
        print(f"Coverage: {cov:.2f}%")
        assert cov >= 80, f"Coverage below threshold: {cov:.2f}% < 80%"
        PY
